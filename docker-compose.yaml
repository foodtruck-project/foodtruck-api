services:
  caddy:
    container_name: caddy
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - caddy_network
    depends_on:
      - backend

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    networks:
      - caddy_network
      - backend_network
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./migrations:/app/migrations

  postgres:
    container_name: postgres
    image: postgres:16
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - backend_network

  redis:
    container_name: redis
    image: redis:7.4.2
    volumes:
      - redis_data:/data
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - backend_network

volumes:
  postgres_data:
  redis_data:
  caddy_data:
  caddy_config:

networks:
  backend_network:
  caddy_network:
